<UserControl x:Class="Moonstocks.Views.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Moonstocks.Views"
             xmlns:converters="clr-namespace:Moonstocks.Converters"
             xmlns:loading="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <!--Import default dictionary, loading indicator and converters-->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Dictionaries/DefaultDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="#F3F5F5">
        
        <!--Loading screen-->
        <Grid Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.ColumnSpan="2">

            <!--Loadin icon-->
            <loading:LoadingIndicator IsTabStop="False" Foreground="{DynamicResource Header}" Name="DoubleBounce" Margin="0 -30 0 0" SpeedRatio="1" IsActive="True" Style="{DynamicResource LoadingIndicatorDoubleBounceStyle}" />

            <!--Loading text-->
            <TextBlock Text="Loading stocks and watchlists" Foreground="{DynamicResource TextHigh}" Margin="0 65 0 0" FontSize="17" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Resources/Fonts/#Poppins Medium" FontWeight="Medium"/>
        </Grid>
        
        <!--Main Content-->
        <Grid Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false, UpdateSourceTrigger=PropertyChanged}">
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="7" />
            </Grid.ColumnDefinitions>
            
            <!--Toolbar-->
            <Grid Grid.ColumnSpan="3" Background="{DynamicResource Header}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="105"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Style="{StaticResource ToolbarButton}" Padding="0" FontSize="16" Foreground="{DynamicResource TextHighAlt}" BorderThickness="0" FontFamily="Resources/Fonts/#Poppins">
                    <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" Text="&#xE710;"></TextBlock>
                </Button>

                <Button Grid.Column="1" Padding="0" FontSize="16" Foreground="{DynamicResource TextHighAlt}" BorderThickness="0" HorizontalAlignment="Right" FontFamily="Resources/Fonts/#Poppins">
                    <Grid Margin="0" Width="auto" Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="35" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" Text="&#xE74D;"></TextBlock>
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource Header}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Grid.Column="2" Padding="0" FontSize="16" Foreground="{DynamicResource TextHighAlt}" BorderThickness="0" HorizontalAlignment="Right" FontFamily="Resources/Fonts/#Poppins">
                    <Grid Margin="0" Width="auto" Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="35" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" Text="&#xE72C;"></TextBlock>
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource Header}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!--Signed in user (logout button) -->
                <Button Grid.Column="7" Padding="0" FontSize="16" Foreground="{DynamicResource TextHighAlt}" BorderThickness="0" HorizontalAlignment="Right" Command="{Binding SignOutCommand}" FontFamily="Resources/Fonts/#Poppins">
                    <Grid Margin="0" Width="auto" Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="35" />
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="14" Text="{Binding DisplayName}" Margin="10 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Right" FontFamily="Resources/Fonts/#Poppins"></TextBlock>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" Text="&#xE77B;"></TextBlock>
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource Header}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                
            </Grid>

            <!--Content-->
            <Grid Grid.Row="1" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="200" MaxWidth="400" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="2.5*" MinWidth="400" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>

                    <!--Left top area-->
                    <Border Margin="7 7 0 0" Background="#fff" CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="5" Opacity="0.2" ShadowDepth="1" />
                        </Border.Effect>
                    </Border>

                    <!--Listview (Left bottom)-->
                    <ListView FontFamily="Resources/Fonts/#Poppins Medium" FontWeight="Medium" ItemsSource="{Binding Path=Watchlists, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding ListViewSelectedIndex, UpdateSourceTrigger=PropertyChanged}" FontSize="12" Margin="7,7,1,7" Grid.Row="1" BorderThickness="0" ItemContainerStyle="{DynamicResource ListViewContainerStyle}">
                        <ListView.Template>
                            <ControlTemplate>
                                <Border Background="#FFFFFF" CornerRadius="5" BorderThickness="0">
                                    <!--Dropshadow-->
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="5" Opacity="0.2" ShadowDepth="1" />
                                    </Border.Effect>
                                    <!--Item presenter-->
                                    <ItemsPresenter></ItemsPresenter>
                                </Border>
                            </ControlTemplate>
                        </ListView.Template>
                    </ListView>

                </Grid>
                
                <!--Grid splitter-->
                <GridSplitter IsTabStop="False" Background="Transparent" Grid.Column="1" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch"/>

                <!--Right area-->
                <Border Grid.Column="2" CornerRadius="5" Padding="5" Background="#fff"  Margin="1,7,7,7">
                    <Border.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="5" Opacity="0.2" ShadowDepth="1" />
                    </Border.Effect>

                    <!--Datagrid-->
                    <DataGrid VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" RowHeaderWidth="0" SelectedIndex="{Binding DatagridSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTabStop="False" ColumnWidth="*" GridLinesVisibility="None" HeadersVisibility="None" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" AutoGenerateColumns="False" Background="#fff" ItemsSource="{Binding Path=SelectedWatchlist, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0">
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}" >
                                <Setter Property="Background" Value="{DynamicResource Header}" />
                                <Setter Property="Foreground" Value="{DynamicResource Background}" />
                                <Setter Property="BorderBrush" Value="#3EFFFFFF"/>
                                <Setter Property="BorderThickness" Value="1 1 1 1"/>
                                <Setter Property="Margin" Value="-1,-1,0,0" />
                                <Setter Property="Height" Value="28" />
                                <Setter Property="Width" Value="auto"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.CellStyle>
                            <!--Disable selection-->
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{x:Null}" />
                                        <Setter Property="Foreground" Value="{DynamicResource TextHigh}" />
                                        <Setter Property="BorderBrush" Value="{x:Null}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Margin="7">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <!--Watchlist title-->
                                            <TextBlock RenderOptions.ClearTypeHint="Enabled" FontFamily="/Resources/Fonts/#Poppins Bold" Foreground="{DynamicResource Header}" FontWeight="Bold" FontSize="31" Margin="0 15 0 20" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" />

                                            <!--Watchlist datagrid-->
                                            <DataGrid FrozenColumnCount="1" GridLinesVisibility="Horizontal" BorderThickness="0" BorderBrush="Black" FontFamily="/Resources/Fonts/#Poppins" SelectionMode="Single" RowHeight="35" ColumnWidth="*" Grid.Row="1" RowHeaderWidth="0" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding Path=StocksOS, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" FontSize="13">
                                                <DataGrid.RowStyle>
                                                    <!--Green background if active and red if non active-->
                                                    <Style TargetType="{x:Type DataGridRow}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=Active}" Value="True">
                                                                <Setter Property="Background" Value="#c2f0c2" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=Active}" Value="False">
                                                                <Setter Property="Background" Value="#ff8566" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGrid.RowStyle>
                                                <DataGrid.CellStyle>
                                                    <!--Disable selection-->
                                                    <Style TargetType="{x:Type DataGridCell}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="{DynamicResource Header}" />
                                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <ContentPresenter VerticalAlignment="Center" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </DataGrid.CellStyle>
                                                <!--Header colums-->
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Ticker" Binding="{Binding Path=Ticker}" Width="auto" MinWidth="120" />
                                                    <DataGridTextColumn Header="Company" Binding="{Binding Path=Company}" Width="auto" MinWidth="140" />
                                                    <DataGridTextColumn Header="Average Price" Binding="{Binding Path=AvgPrice}" Width="auto" MinWidth="130" />
                                                    <DataGridTextColumn Header="Shares" Binding="{Binding Path=Shares}" Width="auto" MinWidth="60" />
                                                    <DataGridTextColumn Header="Sell in (days)" Binding="{Binding Path=DaysLeft}" IsReadOnly="True" Width="auto" MinWidth="140" />
                                                    <DataGridTemplateColumn Header="Active" Width="auto" MinWidth="60">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <CheckBox IsChecked="{Binding Path=Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
    
                </Border>

            </Grid>
        </Grid>
    </Grid>
</UserControl>
